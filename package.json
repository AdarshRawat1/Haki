{
  "name": "haki",
  "displayName": "Haki Docs",
  "description": "AI powered Doxygen documentation generator",
  "version": "1.1.0",
  "publisher": "ayushchamoli",
  "engines": {
    "vscode": "^1.55.0"
  },
  "logo": "src/images/icon.png",
  "activationEvents": [
    "onLanguage:cuda",
    "onLanguage:cuda-cpp",
    "onLanguage:cpp",
    "onLanguage:c"
  ],
  "contributes": {
    "configuration": {
      "type": "object",
      "title": "Doxygen Documentation Generator Settings",
      "properties": {
        "haki.c.triggerSequence": {
          "description": "Doxygen comment trigger. This character sequence triggers generation of Doxygen comments.",
          "type": "string",
          "default": "/**"
        },
        "haki.c.firstLine": {
          "description": "The first line of the comment that gets generated. If empty it won't get generated at all.",
          "type": "string",
          "default": "/**"
        },
        "haki.c.commentPrefix": {
          "description": "The prefix that is used for each comment line except for first and last.",
          "type": "string",
          "default": " * "
        },
        "haki.c.lastLine": {
          "description": "The last line of the comment that gets generated. If empty it won't get generated at all.",
          "type": "string",
          "default": " */"
        },
        "haki.c.setterText": {
          "description": "Smart text snippet for setters.",
          "type": "string",
          "default": "Set the {name} object"
        },
        "haki.c.getterText": {
          "description": "Smart text snippet for getters.",
          "type": "string",
          "default": "Get the {name} object"
        },
        "haki.c.factoryMethodText": {
          "description": "Smart text snippet for factory methods/functions.",
          "type": "string",
          "default": "Create a {name} object"
        },
        "haki.cpp.tparamTemplate": {
          "description": "The template of the template parameter Doxygen line(s) that are generated. If empty it won't get generated at all.",
          "type": "string",
          "default": "@tparam {param} "
        },
        "haki.cpp.ctorText": {
          "description": "Smart text snippet for constructors.",
          "type": "string",
          "default": "Construct a new {name} object"
        },
        "haki.cpp.dtorText": {
          "description": "Smart text snippet for destructors.",
          "type": "string",
          "default": "Destroy the {name} object"
        },
        "haki.file.fileTemplate": {
          "description": "The template for the file parameter in Doxygen.",
          "type": "string",
          "default": "@file {name}"
        },
        "haki.file.versionTag": {
          "description": "Version number for the file.",
          "type": "string",
          "default": "@version 0.1"
        },
        "haki.file.customTag": {
          "markdownDescription": "Additional file documentation.  Array of strings will be converted to one line per element. Can template `{year}`, `{date}`, `{author}`, `{email}` and `{file}`. You have to specify the prefix.",
          "type": [
            "array",
            "string"
          ],
          "default": []
        },
        "haki.file.fileOrder": {
          "markdownDescription": "The order to use for the file comment. Values can be used multiple times. Valid values are `file`, `author`, `brief`, `version`, `date`, `empty`, `copyright` and `custom`.",
          "type": [
            "array",
            "string"
          ],
          "default": [
            "file",
            "author",
            "brief",
            "version",
            "date",
            "empty",
            "copyright",
            "empty",
            "custom"
          ]
        },
        "haki.generic.includeTypeAtReturn": {
          "description": "Whether include type information at return.",
          "type": "boolean",
          "default": true
        },
        "haki.generic.boolReturnsTrueFalse": {
          "markdownDescription": "If this is enabled, the documentation for a `bool` return value will be split into `true` and `false` entries.",
          "type": "boolean",
          "default": true
        },
        "haki.generic.briefTemplate": {
          "description": "The template of the brief Doxygen line that is generated. If empty it won't get generated at all.",
          "type": "string",
          "default": "@brief {text}"
        },
        "haki.generic.paramTemplate": {
          "description": "The template of the param Doxygen line(s) that are generated. If empty it won't get generated at all.",
          "type": "string",
          "default": "@param {param} "
        },
        "haki.generic.returnTemplate": {
          "description": "The template of the return Doxygen line that is generated. If empty it won't get generated at all.",
          "type": "string",
          "default": "@return {type} "
        },
        "haki.generic.linesToGet": {
          "description": "How many lines the plugin should look for to find the end of the declaration. Please be aware that setting this value too low could improve the speed of comment generation by a very slim margin but the plugin also may not correctly detect all declarations or definitions anymore.",
          "type": "number",
          "default": 20
        },
        "haki.generic.authorName": {
          "markdownDescription": "Set the name of the author.  Replaces `{author}`.",
          "type": "string",
          "default": "your name"
        },
        "haki.generic.authorEmail": {
          "markdownDescription": "Set the e-mail address of the author.  Replaces `{email}`.",
          "type": "string",
          "default": "you@domain.com"
        },
        "haki.generic.authorTag": {
          "markdownDescription": "Set the style of the author tag and your name.  Can template `{author}` and `{email}`.",
          "type": "string",
          "default": "@author {author} ({email})"
        },
        "haki.generic.dateTemplate": {
          "description": "The template for the date parameter in Doxygen.",
          "type": "string",
          "default": "@date {date}"
        },
        "haki.generic.dateFormat": {
          "description": "The format to use for the date.",
          "type": "string",
          "default": "YYYY-MM-DD"
        },
        "haki.generic.generateSmartText": {
          "description": "Decide if you want to get smart text for certain commands.",
          "type": "boolean",
          "default": true
        },
        "haki.generic.splitCasingSmartText": {
          "markdownDescription": "Decide if the values put into `{name}` should be split according to their casing.",
          "type": "boolean",
          "default": true
        },
        "haki.generic.order": {
          "markdownDescription": "The order to use for the comment generation. Values can be used multiple times. Valid values are `brief`, `empty`, `tparam`, `param`, `return`, `custom`, `author`, `date`, `version` and `copyright`.",
          "type": [
            "array",
            "string"
          ],
          "default": [
            "brief",
            "empty",
            "tparam",
            "param",
            "return",
            "custom"
          ]
        },
        "haki.generic.customTags": {
          "markdownDescription": "Custom tags to be added to the generic order. One tag per line will be added. Can template `{year}`, `{date}`, `{author}`, `{email}` and `{file}`. You have to specify the prefix.",
          "type": [
            "array",
            "string"
          ],
          "default": []
        },
        "haki.generic.filteredKeywords": {
          "description": "Array of keywords that should be removed from the input prior to parsing.",
          "type": "array",
          "default": []
        },
        "haki.generic.useGitUserName": {
          "markdownDescription": "Substitute `{author}` with `git config --get user.name`.",
          "type": "boolean",
          "default": false
        },
        "haki.generic.useGitUserEmail": {
          "markdownDescription": "Substitute `{email}` with `git config --get user.email`.",
          "type": "boolean",
          "default": false
        },
        "haki.generic.commandSuggestion": {
          "description": "Provide intellisense and snippet for doxygen commands",
          "type": "boolean",
          "default": true
        },
        "haki.generic.commandSuggestionAddPrefix": {
          "markdownDescription": "Add `\\` in doxygen command suggestion for better readability (need to enable commandSuggestion)",
          "type": "boolean",
          "default": false
        }
      }
    }
  },
  "keywords": [
    "cpp",
    "c++",
    "c",
    "Doxygen"
  ],
  "main": "./out/extension",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/iamAyushChamoli/haki.git"
  },
  "scripts": {
    "vscode:prepublish": "yarn compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "test": "yarn compile && node ./out/test/runTests.js",
    "cov": "yarn clean && nyc yarn test",
    "lint": "tslint -c tslint.json 'src/**/*.ts'",
    "clean": "rm -rf coverage .nyc_output out"
  },
  "dependencies": {
    "env-var": "^4.1.0",
    "moment": "^2.29.4",
    "opn": "^5.2.0",
    "simple-git": "^3.5.0",
    "vsce": "^2.15.0"
  },
  "devDependencies": {
    "@istanbuljs/nyc-config-typescript": "0.1.3",
    "@types/mocha": "^5.2.7",
    "@types/node": "12.7.1",
    "@types/vscode": "^1.55.0",
    "decache": "^4.5.1",
    "glob": "^7.1.6",
    "handlebars": "^4.7.3",
    "minimist": ">=1.2.6",
    "mocha": "^9.1.3",
    "nyc": "12.0.1",
    "remap-istanbul": "^0.13.0",
    "source-map-support": "^0.5.19",
    "ts-node": "^9.1.1",
    "tslint": "^5.20.0",
    "typescript": "^4.2.4",
    "vscode-test": "^1.5.2",
    "yargs-parser": ">=13.1.2"
  },
  "author": "",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/iamAyushChamoli/haki/issues"
  },
  "homepage": "https://github.com/iamAyushChamoli/haki#readme"
}
